复制

    1. Redis使用异步复制, 从Redis2.8开始, 从服务器会定期通知主服务器复制流的处理进度

    2. 一个主服务器可以有多个从服务器

    3. 从服务器也可以有自己的从服务器

    4. Redis复制不会阻塞主服务器, 主服务器能够继续为其他客户端提供服务

    5. 复制功能不会阻塞从服务器, 只要在redis.conf中配置, 即使从服务器正在
       进行初始同步, 从服务器也可以使用旧版本的数据来响应查询

       但是当从服务器删除旧数据集并载入新数据集时, 连接请求会被阻塞

       也可以配置从服务器与主服务器断开时向客户端返回错误.

    6. 复制功能可以单纯的做数据冗余, 也可以让多个从服务器处理只读命令来提升扩展性
       比如繁重的SORT命令可以交给从节点执行

    7. 可以通过复制功能让主服务器免于做持久化操作(不建议)

    8. 安全性
       使用复制时, 强烈建议主服务器的持久化是打开的
       如果因为延迟等原因关闭了主服务器的持久化, 那么一定要将实例配置为 不能自动启动

复制功能的工作原理

    1. 从服务器连接到主服务器后发送SYNC命令

    2. 主服务器接到SYNC命令开始执行BGSAVE, 此期间收到的写命令都将保存在缓冲区里

    3. BGSAVE执行完后, 主服务器将rdb文件传给从服务器

    4. 从服务器将rdb写入磁盘, 然后加载到内存

    5. 然后主服务器把缓存的命令使用Redis命令协议的格式传给从服务器


    即使有多个从服务器发生SYNC, 主服务器也只会进行一次BGSAVE

    从服务器在于主服务器断开时会自动重连, 在Redis2.8之前会进行一次全量的重新同步
    在Redis2.8之后也有可能是一部分同步

部分同步

    从 Redis 2.8 开始, 在网络连接短暂性失效之后, 主从服务器可以尝试继续执行原有的复制进程(process), 而不一定要执行完整重同步操作

    主服务器为被发送的复制流创建一个内存缓冲区（in-memory backlog）, 并且主服务器和所有从服务器之间都记录一个复制偏移量（replication offset）和一个主服务器 ID （master run id）, 当出现网络连接断开时, 从服务器会重新连接, 并且向主服务器请求继续执行原来的复制进程

    如果从服务器记录的主服务器 ID 和当前要连接的主服务器的 ID 相同, 并且从服务器记录的偏移量所指定的数据仍然保存在主服务器的复制流缓冲区里面, 那么主服务器会向从服务器发送断线时缺失的那部分数据, 然后复制工作可以继续执行
    否则的话, 从服务器就要执行完整重同步操作


    如果主服务器是 Redis 2.8 或以上版本,那么从服务器使用 PSYNC 命令来进行同步
    如果主服务器是 Redis 2.8 之前的版本,那么从服务器使用 SYNC 命令来进行同步


配置

    1. 配置文件中增加
       slaveof ip port

    2. 或者在客户端中执行
       slaveof ip port

只读从服务器

    1. 从 Redis 2.6 开始, 从服务器支持只读模式, 并且该模式为从服务器的默认模式

    2. 只读模式由 redis.conf 文件中的 slave-read-only 选项控制

从服务器的配置

    1. 如果主服务器需要鉴权
       那么从服务器可以使用
       CONFIG SET masterauth <passwd>
       或者在配置文件中增加
       masterauth <passwd>

主服务器在至少有N个服务器的情况下, 才执行写操作
    
    1. 从服务器以每秒一次的频率 PING 主服务器一次, 并报告复制流的处理情况
    2. 主服务器会记录各个从服务器最后一次向它发送 PING 的时间
    3. 用户可以通过配置, 指定网络延迟的最大值 min-slaves-max-lag ,
       以及执行写操作所需的至少从服务器数量 min-slaves-to-write

    如果至少有 min-slaves-to-write 个从服务器， 并且这些服务器的延迟值都少于 min-slaves-max-lag 秒， 那么主服务器就会执行客户端请求的写操作
    